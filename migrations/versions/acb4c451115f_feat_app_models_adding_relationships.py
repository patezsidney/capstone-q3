"""feat(app.models):adding relationships

Revision ID: acb4c451115f
Revises: 46494898d23f
Create Date: 2022-03-03 11:09:45.954653

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'acb4c451115f'
down_revision = '46494898d23f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classrooms',
    sa.Column('classroom_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('classroom_id')
    )
    op.create_table('schoolsubjects',
    sa.Column('school_subject_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('school_subject', sa.String(length=255), nullable=False),
    sa.Column('employee_id', postgresql.UUID(), nullable=False),
    sa.Column('classroom_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classrooms.classroom_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('school_subject_id')
    )
    op.drop_table('classroom_model')
    op.drop_table('school_subjects_model')
    op.add_column('absence', sa.Column('classroom_id', postgresql.UUID(), nullable=False))
    op.add_column('absence', sa.Column('student_id', postgresql.UUID(), nullable=False))
    op.create_foreign_key(None, 'absence', 'classrooms', ['classroom_id'], ['classroom_id'])
    op.create_foreign_key(None, 'absence', 'students', ['student_id'], ['registration_student_id'])
    op.add_column('grades', sa.Column('student_id', postgresql.UUID(), nullable=False))
    op.add_column('grades', sa.Column('classrom_id', postgresql.UUID(), nullable=False))
    op.create_foreign_key(None, 'grades', 'students', ['student_id'], ['registration_student_id'])
    op.create_foreign_key(None, 'grades', 'classrooms', ['classrom_id'], ['classroom_id'])
    op.add_column('library', sa.Column('employee_id', postgresql.UUID(), nullable=False))
    op.add_column('library', sa.Column('book_id', postgresql.UUID(), nullable=False))
    op.add_column('library', sa.Column('student_id', postgresql.UUID(), nullable=False))
    op.create_foreign_key(None, 'library', 'employees', ['employee_id'], ['employee_id'])
    op.create_foreign_key(None, 'library', 'books', ['book_id'], ['book_id'])
    op.create_foreign_key(None, 'library', 'students', ['student_id'], ['registration_student_id'])
    op.add_column('students', sa.Column('classroom_id', postgresql.UUID(), nullable=False))
    op.create_foreign_key(None, 'students', 'classrooms', ['classroom_id'], ['classroom_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.drop_column('students', 'classroom_id')
    op.drop_constraint(None, 'library', type_='foreignkey')
    op.drop_constraint(None, 'library', type_='foreignkey')
    op.drop_constraint(None, 'library', type_='foreignkey')
    op.drop_column('library', 'student_id')
    op.drop_column('library', 'book_id')
    op.drop_column('library', 'employee_id')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_column('grades', 'classrom_id')
    op.drop_column('grades', 'student_id')
    op.drop_constraint(None, 'absence', type_='foreignkey')
    op.drop_constraint(None, 'absence', type_='foreignkey')
    op.drop_column('absence', 'student_id')
    op.drop_column('absence', 'classroom_id')
    op.create_table('school_subjects_model',
    sa.Column('school_subject_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('school_subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('school_subject_id', name='school_subjects_model_pkey')
    )
    op.create_table('classroom_model',
    sa.Column('classroom_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('classroom_id', name='classroom_model_pkey')
    )
    op.drop_table('schoolsubjects')
    op.drop_table('classrooms')
    # ### end Alembic commands ###
